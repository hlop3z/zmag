fragment ModelFields on Book {
  id
  author
  title
  userId
}

fragment PageFields on PageInfo {
  extra
  length
  pages
}

fragment ErrorFields on Error {
  error
  meta
  messages {
    field
    text
    type
  }
}

query ModelSchema {
  BookSchema
}

query DetailBy {
  BookDetail(filterBy: { author: "Hector Lopez" }) {
    ...ModelFields
  }
}

query Detail($id: ID!) {
  BookDetail(id: $id) {
    ...ModelFields
  }
}

query Search($pagination: Pagination!) {
  BookSearch(pagination: $pagination) {
    pageInfo {
      ...PageFields
    }
    edges {
      node {
        ...ModelFields
      }
    }
  }
}

mutation Create($form: FormBookCreate!) {
  BookCreate(form: $form, forms: null) {
    item {
      ...ModelFields
    }
    error {
      ...ErrorFields
    }
  }
}

mutation CreateMany($forms: [FormBookCreate!]) {
  BookCreate(form: null, forms: $forms) {
    items {
      ...ModelFields
    }
    error {
      ...ErrorFields
    }
  }
}

mutation Update($id: ID, $form: FormBookUpdate!) {
  BookUpdate(item: { id: $id }, form: $form) {
    item {
      ...ModelFields
    }
    error {
      ...ErrorFields
    }
  }
}

mutation UpdateMany($ids: [ID!], $form: FormBookUpdate!) {
  BookUpdate(item: { ids: $ids }, form: $form) {
    updated
    error {
      ...ErrorFields
    }
  }
}

mutation Delete($ids: [ID!]) {
  BookDelete(item: { ids: $ids }) {
    deleted
  }
}
